<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ch.bergturbenthal.raoa</groupId>
		<artifactId>raoa-main</artifactId>
		<version>0.1.0-SNAPSHOT</version>
	</parent>
	<artifactId>raoa-server-new</artifactId>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jgit</groupId>
			<artifactId>org.eclipse.jgit</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
		</dependency>
		<!-- Images -->
		<dependency>
			<groupId>org.im4java</groupId>
			<artifactId>im4java</artifactId>
		</dependency>
		<dependency>
			<groupId>com.googlecode.mp4parser</groupId>
			<artifactId>isoparser</artifactId>
		</dependency>
		<dependency>
			<groupId>com.drewnoakes</groupId>
			<artifactId>metadata-extractor</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.bergturbenthal.raoa.json</groupId>
			<artifactId>raoa-json</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>javax.jmdns</groupId>
			<artifactId>jmdns</artifactId>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>ch.bergturbenthal.raoa</groupId>
			<artifactId>raoa-data</artifactId>
			<version>0.1.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-spring-boot-starter</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
			<dependency>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-push</artifactId>
				<version>7.7.0</version>
			</dependency>
	</dependencies>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.16.8</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<images>
						<image>
							<name>registry.berg-turbenthal.ch:5000/raoa/${project.artifactId}</name>
							<build>
								<!-- <from>openjdk:8</from> <runCmds> <runCmd>apt-get update</runCmd> 
									<runCmd>apt-get -y install imagemagick ffmpeg libavcodec-extra</runCmd> <runCmd>mkdir 
									/data</runCmd> <runCmd>chown nobody /data</runCmd> </runCmds> -->
								<from>registry.berg-turbenthal.ch:5000/raoa/base</from>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<env>
									<RAOA_ALBUM_BASE_DIR>/data</RAOA_ALBUM_BASE_DIR>
									<SERVER_PORT>8080</SERVER_PORT>
								</env>
								<volumes>
									<volume>/data</volume>
								</volumes>
								<ports>
									<port>8080</port>
								</ports>
								<user>nobody</user>
								<entryPoint>
									<exec>
										<arg>java</arg>
										<arg>-jar</arg>
										<arg>/maven/${project.artifactId}-${project.version}.jar</arg>
									</exec>
								</entryPoint>
							</build>
						</image>
					</images>
					<baseImage>java</baseImage>
					<imageName>registry.berg-turbenthal.ch:5000/raoa/${project.artifactId}</imageName>
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<!-- copy the service's jar file from target into the root directory 
						of the image -->
					<!-- <resources> <resource> <targetPath>/</targetPath> <directory>${project.build.directory}</directory> 
						<include>${project.build.finalName}.jar</include> </resource> </resources> -->
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>